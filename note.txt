

tao 1 list store ( tức các hàng)
GtkListStore *ten_bien_con_tro = gtk_list_store_new(so_cot, G_TYPE_STRING,G_TYPE_STRING,..)

----------------
thêm vài hàng 
GtkTreeIter iter;
gtk_list_store_insert_with_value(store, &iter, -1, so_cot_0, gia_tri, so_cot_1, gia_tri,...)


GtkWidget *tree = gtk_tree_view_new_with_model(GTK_TREE_MODEL(store));

gtk_tree_view_set_grid_lines(GTK_TREE_VIEW(tree), GTK_TREE_VIEW_GRID_LINES_BOTH);

g_object_unref(store); // tree đã giữ ref



    GtkCellRenderer *renderer = gtk_cell_renderer_text_new();
----------------
thêm một cột 
GtkTreeView *ten_cot = gtk_tree_view_column_new_with_atributes("ten_cot", renderer, "kieu_du_lieu", vi_tri_cot, NULL);
gtk_tree_view_append_column(GTK_TREE_VIEW(tree), ten_cot(con_tro_cot)); 


--- vi du dang lam section đi 



for (int i = 0; i < 0; i++)
{
	gtk_list_store_insert_with_value(store, &iter, -1, 
					0, header->name,
					1, header->sh_type,
					2, header->sh-flags,
					.....


}

--- ví dụ làm header
GtkTreeIter
for(int i= 0; i< n ; i++)
{	
	gtk_list_store_insert_with-value(store, &iter, -1, 
						0, header->name
						1, header->value);	

}

for(int i = 0; i< n; i++)
{

	// tuong tu


}


GtkWidget *scroll = gtk_scrolled_window_new(NULL, NULL); 
gtk_container_add(GTK_CONTAINER(scroll), tree); 

gtk_container_add(GTK_CONTAINER(right_frame), scroll);


gtk_container_show_all(right_frame);




Name, t

gchar *name = NULL
gtk_tree_model_get(model, &iter, 0, &name, -1); 

g_strcmp0(name, "METADATA") == 0 






g++ gui.cpp -o gtk_demo `pkg-config --cflags --libs gtk+-3.0`
./gtk_demo

Class
Data
Version
OS/ABI
ABI Version
Type
Machine
Version
Entry point address
Start of program headers
Start of section headers
Flags
Size of this header
Size of programe header
Number of program header 
Size of section header 
Number of section headers 
Section headers string table index 